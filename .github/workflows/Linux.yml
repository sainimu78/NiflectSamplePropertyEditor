name: CMake on Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  c_ProjectName: "PropertyEditor"

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install Basic Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libgl1-mesa-dev \
          libxkbcommon-x11-0 \
          wget
    
    - name: Download and Install Prebuilt Qt 5.12.8
      run: |
        echo "下载预编译的 Qt 5.12.8..."
        wget https://download.qt.io/archive/qt/5.12/5.12.8/qt-opensource-linux-x64-5.12.8.run
        chmod +x qt-opensource-linux-x64-5.12.8.run
        
        # 创建安装目录
        QT_INSTALL_DIR="$HOME/Qt"
        mkdir -p $QT_INSTALL_DIR
        
        # 静默安装 (不需要交互脚本)
        echo "开始静默安装..."
        ./qt-opensource-linux-x64-5.12.8.run \
          --platform minimal \
          --script /dev/null \
          --accept-licenses \
          --confirm-command \
          install \
          --root "$QT_INSTALL_DIR" \
          --auto-answer install-everything=1 \
          --default-answer
        
        # 设置环境变量
        QT_PATH="$QT_INSTALL_DIR/5.12.8/gcc_64"
        echo "QT_DIR=$QT_PATH" >> $GITHUB_ENV
        echo "PATH=$QT_PATH/bin:$PATH" >> $GITHUB_ENV
        
        # 验证安装
        echo "Qt 安装位置: $QT_PATH"
        ls -l $QT_PATH
        qmake --version
    
    - name: Check Submodules
      run: |
        echo "检查子模块状态"
        ls -la ThirdParty/CMakeProjectFramework
    
    - name: Configure CMake
      working-directory: Build/${{env.c_ProjectName}}/Linux
      run: |
        echo "当前工作目录: $(pwd)"
        echo "QT_DIR 环境变量: $QT_DIR"
        ./Generate.sh
    
    - name: Build
      working-directory: Build/${{env.c_ProjectName}}/Linux
      run: |
        ./Build.sh
    
    # - name: Run Application
    #   working-directory: Build/${{env.c_ProjectName}}/Linux/DefaultBuild/Release/bin
    #   run: |
    #     ./${{env.c_ProjectName}}