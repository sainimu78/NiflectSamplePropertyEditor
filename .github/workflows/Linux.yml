name: CMake on Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  c_ProjectName: "PropertyEditor"
  QT_VERSION: "5.12.8"
  QT_INSTALL_DIR: "${{ github.workspace }}/Qt"  # Qt 安装路径

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install Basic Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libgl1-mesa-dev \
          libxkbcommon-x11-0 \
          python3 \
          python3-pip
    
    - name: Install Qt 5.12.8
      run: |
        echo "安装 Qt ${{ env.QT_VERSION }}..."
        
        # 安装 aqtinstall (简单安装工具)
        pip3 install aqtinstall
        
        # 直接安装指定版本到工作目录
        aqt install-qt linux desktop ${{ env.QT_VERSION }} gcc_64 \
          -O ${{ env.QT_INSTALL_DIR }} \
          -m qtcharts qtsvg
        
        # 设置环境变量
        echo "QT_DIR=${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }}/gcc_64" >> $GITHUB_ENV
        echo "PATH=${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }}/gcc_64/bin:$PATH" >> $GITHUB_ENV
        
        # 验证安装
        echo "Qt 安装位置: $QT_DIR"
        ls -l $QT_DIR
        qmake --version
    
    - name: Check Submodules
      run: |
        echo "检查子模块状态"
        ls -la ThirdParty/CMakeProjectFramework
    
    - name: Configure CMake
      working-directory: Build/${{env.c_ProjectName}}/Linux
      run: |
        echo "当前工作目录: $(pwd)"
        echo "QT_DIR 环境变量: $QT_DIR"
        ./Generate.sh
    
    - name: Build
      working-directory: Build/${{env.c_ProjectName}}/Linux
      run: |
        ./Build.sh
    
    # - name: Run Application
    #   working-directory: Build/${{env.c_ProjectName}}/Linux/DefaultBuild/Release/bin
    #   run: |
    #     ./${{env.c_ProjectName}}